[user]
  name = Andrea Carraro
  email = me@andreacarraro.it

[github]
  user = toomuchdesign

[merge]
  conflictstyle = diff3

[alias]

  ###
  # Aliases from:
  # http://githowto.com/aliases

    a = add .
    co = checkout
    ci = commit
    cm = commit -m
    ss = status
    br = branch
    hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
    type = cat-file -t
    dump = cat-file -p

  ###
  # Aliases from:
  # http://durdn.com/blog/2012/11/22/must-have-git-aliases-advanced-examples/

    # List commits showing changed files
    ls = log --pretty=format:"%C(yellow)%h\\ %C(green)(%ar)\\ %Creset%s%Cblue\\ [%cn]%Cred%d" --decorate

    # List commits in short form, with colors and branch/tag annotations.
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat

  ###
  # Silvio GIT alias

    # Show the revision log graph using ASCII art
    lg = log --graph --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)â€” %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative

    # List all local feature branches sorted according to the latest change
    # date to give an overview which branches are under active development.
    stbr = "for-each-ref --sort=-committerdate --format='%1B[32m%(committerdate:iso8601) %1B[34m%(committerdate:relative) %1B[0;m%(refname:short)' refs/heads/"

    # List all local feature branches which have not yet been merged to the
    # master repository (assuming "origin" is the remote for the master repo).
    pending = branch --no-merged origin/master

    # Do a flake8 run on about-to-be-committed files (only works from repo root).
    flake8 = ./bin/flake8  --config etc/flake8.ini `git diff --cached --name-only

  ###
  # More aliases

    # list of conflicted files
    conf = diff --name-only --diff-filter=U

    # align local branches to origin
    pruneasorigin = git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d
